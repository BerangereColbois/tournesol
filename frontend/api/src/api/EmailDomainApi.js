/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EmailDomain from '../model/EmailDomain';
import PaginatedEmailDomainList from '../model/PaginatedEmailDomainList';

/**
* EmailDomain service.
* @module api/EmailDomainApi
* @version 2.0.0
*/
export default class EmailDomainApi {

    /**
    * Constructs a new EmailDomainApi. 
    * @alias module:api/EmailDomainApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the emailDomainList operation.
     * @callback module:api/EmailDomainApi~emailDomainListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedEmailDomainList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List e-mail domains
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Number of results to return per page.
     * @param {Number} opts.offset The initial index from which to return the results.
     * @param {module:model/String} opts.status status
     * @param {module:api/EmailDomainApi~emailDomainListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedEmailDomainList}
     */
    emailDomainList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedEmailDomainList;
      return this.apiClient.callApi(
        '/api/v2/email_domain/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the emailDomainRetrieve operation.
     * @callback module:api/EmailDomainApi~emailDomainRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmailDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get e-mail domain
     * @param {Number} id A unique integer value identifying this email domain.
     * @param {module:api/EmailDomainApi~emailDomainRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmailDomain}
     */
    emailDomainRetrieve(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling emailDomainRetrieve");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EmailDomain;
      return this.apiClient.callApi(
        '/api/v2/email_domain/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
