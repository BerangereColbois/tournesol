/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PaginatedVideoRateLaterSerializerV2List from '../model/PaginatedVideoRateLaterSerializerV2List';
import PatchedVideoRateLaterDelete from '../model/PatchedVideoRateLaterDelete';
import VideoRateLaterSerializerV2 from '../model/VideoRateLaterSerializerV2';

/**
* RateLater service.
* @module api/RateLaterApi
* @version 2.0.0
*/
export default class RateLaterApi {

    /**
    * Constructs a new RateLaterApi. 
    * @alias module:api/RateLaterApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the rateLaterBulkDeletePartialUpdate operation.
     * @callback module:api/RateLaterApi~rateLaterBulkDeletePartialUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete many videos from the list by IDs.
     * @param {Array.<module:model/PatchedVideoRateLaterDelete>} patchedVideoRateLaterDelete 
     * @param {module:api/RateLaterApi~rateLaterBulkDeletePartialUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rateLaterBulkDeletePartialUpdate(patchedVideoRateLaterDelete, callback) {
      let postBody = patchedVideoRateLaterDelete;
      // verify the required parameter 'patchedVideoRateLaterDelete' is set
      if (patchedVideoRateLaterDelete === undefined || patchedVideoRateLaterDelete === null) {
        throw new Error("Missing the required parameter 'patchedVideoRateLaterDelete' when calling rateLaterBulkDeletePartialUpdate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/rate_later/bulk_delete/', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rateLaterCreate operation.
     * @callback module:api/RateLaterApi~rateLaterCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VideoRateLaterSerializerV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Schedule a video to be rated later
     * @param {module:model/VideoRateLaterSerializerV2} videoRateLaterSerializerV2 
     * @param {module:api/RateLaterApi~rateLaterCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VideoRateLaterSerializerV2}
     */
    rateLaterCreate(videoRateLaterSerializerV2, callback) {
      let postBody = videoRateLaterSerializerV2;
      // verify the required parameter 'videoRateLaterSerializerV2' is set
      if (videoRateLaterSerializerV2 === undefined || videoRateLaterSerializerV2 === null) {
        throw new Error("Missing the required parameter 'videoRateLaterSerializerV2' when calling rateLaterCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = VideoRateLaterSerializerV2;
      return this.apiClient.callApi(
        '/api/v2/rate_later/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rateLaterDestroy operation.
     * @callback module:api/RateLaterApi~rateLaterDestroyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a video from rate later list
     * @param {Number} id A unique integer value identifying this video rate later.
     * @param {module:api/RateLaterApi~rateLaterDestroyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    rateLaterDestroy(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling rateLaterDestroy");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/rate_later/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rateLaterList operation.
     * @callback module:api/RateLaterApi~rateLaterListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedVideoRateLaterSerializerV2List} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get videos queued to be rated later
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Number of results to return per page.
     * @param {Number} opts.offset The initial index from which to return the results.
     * @param {String} opts.videoVideoId video__video_id
     * @param {module:api/RateLaterApi~rateLaterListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedVideoRateLaterSerializerV2List}
     */
    rateLaterList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'video__video_id': opts['videoVideoId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedVideoRateLaterSerializerV2List;
      return this.apiClient.callApi(
        '/api/v2/rate_later/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rateLaterRetrieve operation.
     * @callback module:api/RateLaterApi~rateLaterRetrieveCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VideoRateLaterSerializerV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get one video to be rated later (by object ID)
     * @param {Number} id A unique integer value identifying this video rate later.
     * @param {module:api/RateLaterApi~rateLaterRetrieveCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VideoRateLaterSerializerV2}
     */
    rateLaterRetrieve(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling rateLaterRetrieve");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth', 'tokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VideoRateLaterSerializerV2;
      return this.apiClient.callApi(
        '/api/v2/rate_later/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
