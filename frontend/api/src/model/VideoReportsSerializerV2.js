/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoReportsSerializerV2 model module.
 * @module model/VideoReportsSerializerV2
 * @version 2.0.0
 */
class VideoReportsSerializerV2 {
    /**
     * Constructs a new <code>VideoReportsSerializerV2</code>.
     * Serialize VideoReports.
     * @alias module:model/VideoReportsSerializerV2
     * @param id {Number} 
     * @param video {String} 
     */
    constructor(id, video) { 
        
        VideoReportsSerializerV2.initialize(this, id, video);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, video) { 
        obj['id'] = id;
        obj['video'] = video;
    }

    /**
     * Constructs a <code>VideoReportsSerializerV2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoReportsSerializerV2} obj Optional instance to populate.
     * @return {module:model/VideoReportsSerializerV2} The populated <code>VideoReportsSerializerV2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoReportsSerializerV2();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = ApiClient.convertToType(data['video'], 'String');
            }
            if (data.hasOwnProperty('explanation')) {
                obj['explanation'] = ApiClient.convertToType(data['explanation'], 'String');
            }
            if (data.hasOwnProperty('bully')) {
                obj['bully'] = ApiClient.convertToType(data['bully'], 'Boolean');
            }
            if (data.hasOwnProperty('death_threat')) {
                obj['death_threat'] = ApiClient.convertToType(data['death_threat'], 'Boolean');
            }
            if (data.hasOwnProperty('hate')) {
                obj['hate'] = ApiClient.convertToType(data['hate'], 'Boolean');
            }
            if (data.hasOwnProperty('kid')) {
                obj['kid'] = ApiClient.convertToType(data['kid'], 'Boolean');
            }
            if (data.hasOwnProperty('misl0')) {
                obj['misl0'] = ApiClient.convertToType(data['misl0'], 'Boolean');
            }
            if (data.hasOwnProperty('misl1')) {
                obj['misl1'] = ApiClient.convertToType(data['misl1'], 'Boolean');
            }
            if (data.hasOwnProperty('misl2')) {
                obj['misl2'] = ApiClient.convertToType(data['misl2'], 'Boolean');
            }
            if (data.hasOwnProperty('threat')) {
                obj['threat'] = ApiClient.convertToType(data['threat'], 'Boolean');
            }
            if (data.hasOwnProperty('troll')) {
                obj['troll'] = ApiClient.convertToType(data['troll'], 'Boolean');
            }
            if (data.hasOwnProperty('violence')) {
                obj['violence'] = ApiClient.convertToType(data['violence'], 'Boolean');
            }
            if (data.hasOwnProperty('violent_act')) {
                obj['violent_act'] = ApiClient.convertToType(data['violent_act'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
VideoReportsSerializerV2.prototype['id'] = undefined;

/**
 * @member {String} video
 */
VideoReportsSerializerV2.prototype['video'] = undefined;

/**
 * Why is the video reported
 * @member {String} explanation
 */
VideoReportsSerializerV2.prototype['explanation'] = undefined;

/**
 * The content is cyber-bullying
 * @member {Boolean} bully
 */
VideoReportsSerializerV2.prototype['bully'] = undefined;

/**
 * The content contains death threats
 * @member {Boolean} death_threat
 */
VideoReportsSerializerV2.prototype['death_threat'] = undefined;

/**
 * The content contains hate speech
 * @member {Boolean} hate
 */
VideoReportsSerializerV2.prototype['hate'] = undefined;

/**
 * The content is not kid-friendly
 * @member {Boolean} kid
 */
VideoReportsSerializerV2.prototype['kid'] = undefined;

/**
 * The content is slightly misleading
 * @member {Boolean} misl0
 */
VideoReportsSerializerV2.prototype['misl0'] = undefined;

/**
 * The content is very misleading
 * @member {Boolean} misl1
 */
VideoReportsSerializerV2.prototype['misl1'] = undefined;

/**
 * The misinformation of the content is misleading and dangerous
 * @member {Boolean} misl2
 */
VideoReportsSerializerV2.prototype['misl2'] = undefined;

/**
 * The content contains threats
 * @member {Boolean} threat
 */
VideoReportsSerializerV2.prototype['threat'] = undefined;

/**
 * The content is a troll
 * @member {Boolean} troll
 */
VideoReportsSerializerV2.prototype['troll'] = undefined;

/**
 * The content promotes violence
 * @member {Boolean} violence
 */
VideoReportsSerializerV2.prototype['violence'] = undefined;

/**
 * The content calls for violent acts
 * @member {Boolean} violent_act
 */
VideoReportsSerializerV2.prototype['violent_act'] = undefined;






export default VideoReportsSerializerV2;

