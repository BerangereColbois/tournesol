/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Disagreement model module.
 * @module model/Disagreement
 * @version 2.0.0
 */
class Disagreement {
    /**
     * Constructs a new <code>Disagreement</code>.
     * Serialize disagreements between ratings and the representative.
     * @alias module:model/Disagreement
     * @param feature {String} Feature the inconsistency is on
     * @param video1VideoId {String} Left video
     * @param video2VideoId {String} Right video
     * @param modelScore {Number} The score that the model gives, in 0..100.0
     * @param ratingScore {Number} The score that you gave, in 0..100.0
     * @param mse01 {Number} Mean squared error between model and rating scores, in 0-1
     */
    constructor(feature, video1VideoId, video2VideoId, modelScore, ratingScore, mse01) { 
        
        Disagreement.initialize(this, feature, video1VideoId, video2VideoId, modelScore, ratingScore, mse01);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, feature, video1VideoId, video2VideoId, modelScore, ratingScore, mse01) { 
        obj['feature'] = feature;
        obj['video_1__video_id'] = video1VideoId;
        obj['video_2__video_id'] = video2VideoId;
        obj['model_score'] = modelScore;
        obj['rating_score'] = ratingScore;
        obj['mse_01'] = mse01;
    }

    /**
     * Constructs a <code>Disagreement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Disagreement} obj Optional instance to populate.
     * @return {module:model/Disagreement} The populated <code>Disagreement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Disagreement();

            if (data.hasOwnProperty('feature')) {
                obj['feature'] = ApiClient.convertToType(data['feature'], 'String');
            }
            if (data.hasOwnProperty('video_1__video_id')) {
                obj['video_1__video_id'] = ApiClient.convertToType(data['video_1__video_id'], 'String');
            }
            if (data.hasOwnProperty('video_2__video_id')) {
                obj['video_2__video_id'] = ApiClient.convertToType(data['video_2__video_id'], 'String');
            }
            if (data.hasOwnProperty('model_score')) {
                obj['model_score'] = ApiClient.convertToType(data['model_score'], 'Number');
            }
            if (data.hasOwnProperty('rating_score')) {
                obj['rating_score'] = ApiClient.convertToType(data['rating_score'], 'Number');
            }
            if (data.hasOwnProperty('mse_01')) {
                obj['mse_01'] = ApiClient.convertToType(data['mse_01'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Feature the inconsistency is on
 * @member {String} feature
 */
Disagreement.prototype['feature'] = undefined;

/**
 * Left video
 * @member {String} video_1__video_id
 */
Disagreement.prototype['video_1__video_id'] = undefined;

/**
 * Right video
 * @member {String} video_2__video_id
 */
Disagreement.prototype['video_2__video_id'] = undefined;

/**
 * The score that the model gives, in 0..100.0
 * @member {Number} model_score
 */
Disagreement.prototype['model_score'] = undefined;

/**
 * The score that you gave, in 0..100.0
 * @member {Number} rating_score
 */
Disagreement.prototype['rating_score'] = undefined;

/**
 * Mean squared error between model and rating scores, in 0-1
 * @member {Number} mse_01
 */
Disagreement.prototype['mse_01'] = undefined;






export default Disagreement;

