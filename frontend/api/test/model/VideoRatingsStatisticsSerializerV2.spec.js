/**
 * Tournesol API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TournesolApi);
  }
}(this, function(expect, TournesolApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TournesolApi.VideoRatingsStatisticsSerializerV2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VideoRatingsStatisticsSerializerV2', function() {
    it('should create an instance of VideoRatingsStatisticsSerializerV2', function() {
      // uncomment below and update the code to test VideoRatingsStatisticsSerializerV2
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be.a(TournesolApi.VideoRatingsStatisticsSerializerV2);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "video")', function() {
      // uncomment below and update the code to test the property video
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property publicUsername (base name: "public_username")', function() {
      // uncomment below and update the code to test the property publicUsername
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property score (base name: "score")', function() {
      // uncomment below and update the code to test the property score
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property nComparisons (base name: "n_comparisons")', function() {
      // uncomment below and update the code to test the property nComparisons
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property reliability (base name: "reliability")', function() {
      // uncomment below and update the code to test the property reliability
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property importance (base name: "importance")', function() {
      // uncomment below and update the code to test the property importance
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property engaging (base name: "engaging")', function() {
      // uncomment below and update the code to test the property engaging
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property pedagogy (base name: "pedagogy")', function() {
      // uncomment below and update the code to test the property pedagogy
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property laymanFriendly (base name: "layman_friendly")', function() {
      // uncomment below and update the code to test the property laymanFriendly
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property diversityInclusion (base name: "diversity_inclusion")', function() {
      // uncomment below and update the code to test the property diversityInclusion
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property backfireRisk (base name: "backfire_risk")', function() {
      // uncomment below and update the code to test the property backfireRisk
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property betterHabits (base name: "better_habits")', function() {
      // uncomment below and update the code to test the property betterHabits
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

    it('should have the property entertainingRelaxing (base name: "entertaining_relaxing")', function() {
      // uncomment below and update the code to test the property entertainingRelaxing
      //var instane = new TournesolApi.VideoRatingsStatisticsSerializerV2();
      //expect(instance).to.be();
    });

  });

}));
