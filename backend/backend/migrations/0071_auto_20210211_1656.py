# Generated by Django 3.0.7 on 2021-02-11 16:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0070_auto_20210210_2229'),
    ]

    operations = [
        migrations.AddField(
            model_name='expertrating',
            name='better_habits',
            field=models.FloatField(blank=True, default=None, help_text='Encourages better habits', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='expertrating',
            name='better_habits_weight',
            field=models.FloatField(default=1, help_text='Encourages better habits weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AddField(
            model_name='expertratingsliderchanges',
            name='better_habits',
            field=models.FloatField(blank=True, default=None, help_text='Encourages better habits', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='better_habits',
            field=models.FloatField(default=0, help_text='Encourages better habits', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AddField(
            model_name='userpreferences',
            name='better_habits_enabled',
            field=models.BooleanField(default=True, help_text='better_habits given for ratings'),
        ),
        migrations.AddField(
            model_name='video',
            name='better_habits',
            field=models.FloatField(default=0, help_text='Encourages better habits'),
        ),
        migrations.AddField(
            model_name='videocomment',
            name='better_habits',
            field=models.BooleanField(default=False, help_text='Encourages better habits', null=True),
        ),
        migrations.AddField(
            model_name='videorating',
            name='better_habits',
            field=models.FloatField(default=0, help_text='Encourages better habits'),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='engaging',
            field=models.FloatField(blank=True, default=None, help_text='Engaging and thought-provoking', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='engaging_weight',
            field=models.FloatField(default=1, help_text='Engaging and thought-provoking weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='importance',
            field=models.FloatField(blank=True, default=None, help_text='Important and actionable', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='importance_weight',
            field=models.FloatField(default=1, help_text='Important and actionable weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='pedagogy',
            field=models.FloatField(blank=True, default=None, help_text='Clear and pedagogical', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='pedagogy_weight',
            field=models.FloatField(default=1, help_text='Clear and pedagogical weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='reliability',
            field=models.FloatField(blank=True, default=None, help_text='Reliable and not misleading', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='reliability_weight',
            field=models.FloatField(default=1, help_text='Reliable and not misleading weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertratingsliderchanges',
            name='engaging',
            field=models.FloatField(blank=True, default=None, help_text='Engaging and thought-provoking', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertratingsliderchanges',
            name='importance',
            field=models.FloatField(blank=True, default=None, help_text='Important and actionable', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertratingsliderchanges',
            name='pedagogy',
            field=models.FloatField(blank=True, default=None, help_text='Clear and pedagogical', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertratingsliderchanges',
            name='reliability',
            field=models.FloatField(blank=True, default=None, help_text='Reliable and not misleading', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='engaging',
            field=models.FloatField(default=0, help_text='Engaging and thought-provoking', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='importance',
            field=models.FloatField(default=0, help_text='Important and actionable', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='pedagogy',
            field=models.FloatField(default=0, help_text='Clear and pedagogical', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='userpreferences',
            name='reliability',
            field=models.FloatField(default=0, help_text='Reliable and not misleading', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='video',
            name='engaging',
            field=models.FloatField(default=0, help_text='Engaging and thought-provoking'),
        ),
        migrations.AlterField(
            model_name='video',
            name='importance',
            field=models.FloatField(default=0, help_text='Important and actionable'),
        ),
        migrations.AlterField(
            model_name='video',
            name='pedagogy',
            field=models.FloatField(default=0, help_text='Clear and pedagogical'),
        ),
        migrations.AlterField(
            model_name='video',
            name='reliability',
            field=models.FloatField(default=0, help_text='Reliable and not misleading'),
        ),
        migrations.AlterField(
            model_name='videocomment',
            name='engaging',
            field=models.BooleanField(default=False, help_text='Engaging and thought-provoking', null=True),
        ),
        migrations.AlterField(
            model_name='videocomment',
            name='importance',
            field=models.BooleanField(default=False, help_text='Important and actionable', null=True),
        ),
        migrations.AlterField(
            model_name='videocomment',
            name='pedagogy',
            field=models.BooleanField(default=False, help_text='Clear and pedagogical', null=True),
        ),
        migrations.AlterField(
            model_name='videocomment',
            name='reliability',
            field=models.BooleanField(default=False, help_text='Reliable and not misleading', null=True),
        ),
        migrations.AlterField(
            model_name='videorating',
            name='engaging',
            field=models.FloatField(default=0, help_text='Engaging and thought-provoking'),
        ),
        migrations.AlterField(
            model_name='videorating',
            name='importance',
            field=models.FloatField(default=0, help_text='Important and actionable'),
        ),
        migrations.AlterField(
            model_name='videorating',
            name='pedagogy',
            field=models.FloatField(default=0, help_text='Clear and pedagogical'),
        ),
        migrations.AlterField(
            model_name='videorating',
            name='reliability',
            field=models.FloatField(default=0, help_text='Reliable and not misleading'),
        ),
    ]
