# Generated by Django 3.1.8 on 2021-05-04 14:27

import backend.model_helpers
import computed_property.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0094_historicalexpertrating'),
    ]

    operations = [
        migrations.AddField(
            model_name='video',
            name='backfire_risk_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for backfire_risk for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='better_habits_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for better_habits for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='diversity_inclusion_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for diversity_inclusion for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='engaging_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for engaging for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='entertaining_relaxing_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for entertaining_relaxing for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='importance_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for importance for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='layman_friendly_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for layman_friendly for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='n_private_experts',
            field=computed_property.fields.ComputedIntegerField(compute_from='get_n_private_experts', default=0, editable=False, help_text='Number of certified contributors who rated this video privately'),
        ),
        migrations.AddField(
            model_name='video',
            name='n_public_experts',
            field=computed_property.fields.ComputedIntegerField(compute_from='get_n_public_experts', default=0, editable=False, help_text='Number of certified contributors who rated this video publicly'),
        ),
        migrations.AddField(
            model_name='video',
            name='pareto_optimal',
            field=models.BooleanField(default=False, help_text='Is the video pareto-optimal based on aggregated scores?'),
        ),
        migrations.AddField(
            model_name='video',
            name='pedagogy_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for pedagogy for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='video',
            name='public_experts',
            field=backend.model_helpers.ComputedJsonField(compute_from='get_certified_public_top_raters_list', default='[]', editable=False, help_text='Top 10 certified public contributor usernames'),
        ),
        migrations.AddField(
            model_name='video',
            name='rating_n_experts',
            field=computed_property.fields.ComputedIntegerField(compute_from='get_rating_n_experts', default=0, editable=False, help_text='Total number of certified contributors who rated the video'),
        ),
        migrations.AddField(
            model_name='video',
            name='rating_n_ratings',
            field=computed_property.fields.ComputedIntegerField(compute_from='get_n_ratings', default=0, editable=False, help_text='Total number of pairwise comparisons for this video from certified contributors'),
        ),
        migrations.AddField(
            model_name='video',
            name='reliability_quantile',
            field=models.FloatField(blank=True, default=None, help_text='Top quantile for reliability for all rated videos foraggregated scores. 0.0=best, 1.0=worst', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
    ]
