# Generated by Django 3.0.7 on 2020-12-03 11:51

import django.core.validators
from django.db import migrations, models
import django.db.models.expressions


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0033_auto_20201203_1101'),
    ]

    operations = [
        migrations.AlterField(
            model_name='expertrating',
            name='backfire_risk',
            field=models.FloatField(help_text='Resilience to backfiring risks', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='backfire_risk_weight',
            field=models.FloatField(default=1, help_text='Resilience to backfiring risks weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='engaging',
            field=models.FloatField(help_text='Engaging', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='engaging_weight',
            field=models.FloatField(default=1, help_text='Engaging weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='importance',
            field=models.FloatField(help_text='Importance', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='importance_weight',
            field=models.FloatField(default=1, help_text='Importance weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='pedagogy',
            field=models.FloatField(help_text='Pedagogy', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='pedagogy_weight',
            field=models.FloatField(default=1, help_text='Pedagogy weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='reliability',
            field=models.FloatField(help_text='Reliability', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)]),
        ),
        migrations.AlterField(
            model_name='expertrating',
            name='reliability_weight',
            field=models.FloatField(default=1, help_text='Reliability weight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(8)]),
        ),
        migrations.AddConstraint(
            model_name='expertrating',
            constraint=models.CheckConstraint(check=models.Q(_negated=True, video_1=django.db.models.expressions.F('video_2')), name='videos_cannot_be_equal'),
        ),
    ]
