# Generated by Django 3.0.7 on 2020-12-13 07:50

import backend.models
import computed_property.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    replaces = [('backend', '0035_auto_20201212_1810'), ('backend', '0036_auto_20201212_1826'), ('backend', '0037_auto_20201212_1831'), ('backend', '0038_auto_20201212_1831'), ('backend', '0039_auto_20201212_1831'), ('backend', '0040_auto_20201212_1840'), ('backend', '0041_userinformation_avatar'), ('backend', '0042_auto_20201212_1847'), ('backend', '0043_auto_20201212_2057'), ('backend', '0044_verifiedemail_user'), ('backend', '0045_remove_userinformation_emails'), ('backend', '0046_auto_20201212_2126'), ('backend', '0047_auto_20201212_2127'), ('backend', '0048_auto_20201212_2151'), ('backend', '0049_populate_emails'), ('backend', '0050_auto_20201212_2211'), ('backend', '0051_auto_20201212_2258'), ('backend', '0052_auto_20201212_2327'), ('backend', '0053_auto_20201212_2341'), ('backend', '0054_auto_20201212_2343'), ('backend', '0055_auto_20201213_0022'), ('backend', '0056_auto_20201213_0041'), ('backend', '0057_auto_20201213_0125'), ('backend', '0058_auto_20201213_0126'), ('backend', '0059_verifiableemail_domain')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('backend', '0034_auto_20201203_1151'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='userpreferences',
            name='description',
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Expertise description', max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpertiseKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Expertise keyword description', max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, help_text='Your position', null=True)),
                ('bio', models.TextField(blank=True, help_text='Self-description (degree, biography, ...)', null=True)),
                ('comment_anonymously', models.BooleanField(default=False, help_text='Comment anonymously by-default')),
                ('show_online_presence', models.BooleanField(default=False, help_text='Show my online presence on Tournesol')),
                ('birth_year', models.IntegerField(blank=True, help_text='Year of birth', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('gender', models.CharField(blank=True, help_text='Your gender', max_length=50, null=True)),
                ('nationality', models.CharField(blank=True, help_text='Your nationality', max_length=50, null=True)),
                ('race', models.CharField(blank=True, help_text='Your race', max_length=50, null=True)),
                ('political_affiliation', models.CharField(blank=True, help_text='Your political affiliation', max_length=50, null=True)),
                ('religion', models.CharField(blank=True, help_text='Your religion', max_length=50, null=True)),
                ('degree_of_political_engagement', models.CharField(blank=True, help_text='Your degree of political engagement', max_length=50, null=True)),
                ('user', models.OneToOneField(help_text='DjangoUser that the info belong to', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('expertises', models.ManyToManyField(blank=True, help_text='Your expertise.', related_name='expertises', to='backend.Expertise')),
                ('expertise_keywords', models.ManyToManyField(blank=True, help_text='Your expertise keywords.', related_name='expertise_keywords', to='backend.ExpertiseKeyword')),
                ('first_name', models.CharField(blank=True, help_text='First name', max_length=100, null=True)),
                ('google_scholar', models.URLField(blank=True, help_text='Your Google Scholar URL', max_length=500, null=True)),
                ('last_name', models.CharField(blank=True, help_text='Last name', max_length=100, null=True)),
                ('linkedin', models.URLField(blank=True, help_text='Your LinkedIn URL', max_length=500, null=True)),
                ('orcid', models.URLField(blank=True, help_text='Your ORCID', max_length=500, null=True)),
                ('twitter', models.URLField(blank=True, help_text='Your Twitter handle', max_length=500, null=True)),
                ('website', models.URLField(blank=True, help_text='Your website URL', max_length=500, null=True)),
                ('youtube', models.URLField(blank=True, help_text='Your Youtube channel URL', max_length=500, null=True)),
                ('avatar', models.ImageField(blank=True, help_text='Your profile picture.', upload_to='profiles', validators=[backend.models.UserInformation.validate_avatar])),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(help_text='Degree level', max_length=100)),
                ('domain', models.CharField(help_text='Degree domain', max_length=100)),
                ('institution', models.CharField(help_text='Degree institution', max_length=100)),
                ('user', models.ForeignKey(help_text='User that the degree belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.UserInformation')),
            ],
            options={
                'ordering': ['level', 'domain', 'institution'],
            },
        ),
        migrations.CreateModel(
            name='VerifiableEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='E-mail address', max_length=100, unique=True)),
                ('is_verified', models.BooleanField(default=False, help_text='If true, this e-mail is verified')),
                ('token', models.CharField(blank=True, help_text='The token that needs to be supplied to verify this e-mail address', max_length=1000, null=True)),
                ('user', models.ForeignKey(help_text='User that this e-mail belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.UserInformation')),
            ],
        ),
        migrations.AlterField(
            model_name='verifiableemail',
            name='user',
            field=models.ForeignKey(default=None, help_text='User that this e-mail belongs to', on_delete=django.db.models.deletion.CASCADE, to='backend.UserInformation'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='degree',
            name='user',
            field=models.ForeignKey(help_text='User that the degree belongs to.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='degrees', to='backend.UserInformation'),
        ),
        migrations.AlterField(
            model_name='verifiableemail',
            name='user',
            field=models.ForeignKey(help_text='User that this e-mail belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='backend.UserInformation'),
        ),
        migrations.AlterField(
            model_name='expertise',
            name='name',
            field=models.CharField(help_text='Expertise description', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='expertisekeyword',
            name='name',
            field=models.CharField(help_text='Expertise keyword description', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='userinformation',
            name='avatar',
            field=models.ImageField(blank=True, help_text='Your profile picture.', null=True, upload_to='profiles', validators=[backend.models.UserInformation.validate_avatar]),
        ),
        migrations.AlterUniqueTogether(
            name='degree',
            unique_together={('level', 'domain', 'institution', 'user')},
        ),
        migrations.RemoveField(
            model_name='userinformation',
            name='expertise_keywords',
        ),
        migrations.RemoveField(
            model_name='userinformation',
            name='expertises',
        ),
        migrations.AddField(
            model_name='expertise',
            name='user',
            field=models.ForeignKey(help_text='User for the expertise', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expertises', to='backend.UserInformation'),
        ),
        migrations.AddField(
            model_name='expertisekeyword',
            name='user',
            field=models.ForeignKey(help_text='User for the expertise keywords', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expertise_keywords', to='backend.UserInformation'),
        ),
        migrations.AlterField(
            model_name='expertise',
            name='name',
            field=models.CharField(help_text='Expertise description', max_length=100),
        ),
        migrations.AlterField(
            model_name='expertisekeyword',
            name='name',
            field=models.CharField(help_text='Expertise keyword description', max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='expertise',
            unique_together={('name', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='expertisekeyword',
            unique_together={('name', 'user')},
        ),
        migrations.AlterModelOptions(
            name='degree',
            options={'ordering': ['rank', 'level', 'domain', 'institution']},
        ),
        migrations.AlterModelOptions(
            name='expertise',
            options={'ordering': ['rank', 'name']},
        ),
        migrations.AlterModelOptions(
            name='expertisekeyword',
            options={'ordering': ['rank', 'name']},
        ),
        migrations.AlterModelOptions(
            name='verifiableemail',
            options={'ordering': ['rank']},
        ),
        migrations.AddField(
            model_name='degree',
            name='rank',
            field=models.IntegerField(default=0, help_text='Ordering field'),
        ),
        migrations.AddField(
            model_name='expertise',
            name='rank',
            field=models.IntegerField(default=0, help_text='Ordering field'),
        ),
        migrations.AddField(
            model_name='expertisekeyword',
            name='rank',
            field=models.IntegerField(default=0, help_text='Ordering field'),
        ),
        migrations.AddField(
            model_name='verifiableemail',
            name='rank',
            field=models.IntegerField(default=0, help_text='Ordering field'),
        ),
        migrations.AlterField(
            model_name='verifiableemail',
            name='email',
            field=models.EmailField(help_text='E-mail address', max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='verifiableemail',
            unique_together={('email', 'user')},
        ),
        migrations.AlterField(
            model_name='verifiableemail',
            name='user',
            field=models.ForeignKey(help_text='User that this e-mail belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='backend.UserInformation'),
        ),
        migrations.AddField(
            model_name='verifiableemail',
            name='domain',
            field=computed_property.fields.ComputedCharField(compute_from='email_domain', default=uuid.uuid1, editable=False, help_text='Email domain with @', max_length=50),
        ),
    ]
