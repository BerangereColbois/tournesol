# Generated by Django 3.0.7 on 2021-02-10 00:32

import backend.model_helpers
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0063_resetpasswordtoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpertRatingSliderChanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, help_text='Time the values are added', null=True)),
                ('reliability', models.FloatField(blank=True, default=None, help_text='Reliability', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('importance', models.FloatField(blank=True, default=None, help_text='Importance', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('engaging', models.FloatField(blank=True, default=None, help_text='Engaging', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('pedagogy', models.FloatField(blank=True, default=None, help_text='Pedagogy', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('layman_friendly', models.FloatField(blank=True, default=None, help_text='Layman-friendly', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('diversity_inclusion', models.FloatField(blank=True, default=None, help_text='Diversity and Inclusion', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('backfire_risk', models.FloatField(blank=True, default=None, help_text='Resilience to backfiring risks', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('rating', models.ForeignKey(help_text='Rating that changes belong to', on_delete=django.db.models.deletion.CASCADE, to='backend.ExpertRating')),
            ],
            bases=(models.Model, backend.model_helpers.WithFeatures, backend.model_helpers.WithDynamicFields),
        ),
    ]
